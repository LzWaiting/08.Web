CSS 选择器

1. 作用：规范页面中哪些元素能够应用声明好的样式
2. 目的：匹配页面元素
3. 详解
	1. 标签选择器/元素选择器
		特点：将标签作为选择符，来匹配文档中所有的该标签，包含后代元素
		语法：
			标签名{
				属性：值；
				...
			}
		练习：见 CSS/tag-selector.html
	2. 类选择器(实现样式的复用)
		特点：通过元素的class属性值进行匹配
		语法：
			.c1{
				样式
			}
			<p class="c1">p文本</p>
			注意：以英文.开头，跟上class属性值，中间没有空格
		练习：见 CSS/class-selector.html
		类选择器的结合使用
			1. 标签名.类名
				表示在指定标签中匹配class属性值对应的元素
				注意：标签名一定要写在前面
			2. .类名1.类名2（不常用）
			3. 标签中使用两个类选择器的样式
				<p class="类名1 类名2">
	3. ID 选择器
		1. id 作用
			HTML中所有的元素都有一个id属性,主要用来表示该元素在文档中的标志，具有唯一性
		2. id 选择器
			通过元素的id属性值进行匹配
			语法：
				#id属性值{
					样式
				}
			注意：通常网页中外围的结构化标签，都使用id进行标识，具有唯一性
			et:
				#navigate{
					样式
				}
				<div id="navigate">导航条</div>
			示例：见 CSS/id-selector.html
	4. 群组选择器
		1. 作用:为多个选择器设置共同的样式
		2. 语法：
			选择器1，选择器2，选择器3，...{
				样式
			}
			et:
				div,h1,p{
					color: gray;
				}
				<div></div>
				<h1></h1>
				<p></p>
			示例：见 CSS/group-selector.html
	5. 后代选择器
		1. 作用：依托于元素的后代关系来匹配元素（既包含直接子元素，也包含后代元素）
		2. 语法：
			#选择器1 选择器2 ...{
				样式
			}
			在选择器1对应的元素中匹配后代元素，后代元素需满足选择器2
			et:
				#nav span{
					
				}
				<!-- 匹配#nav下的所有span元素 -->
	6. 子代选择器
		1. 作用：依托元素的子代关系进行匹配，只匹配直接子元素
		2. 语法：
			选择器1>选择器2{
				样式
			}
			在选择器1对应的元素中匹配直接子元素，满足选择器2的要求(后代具有继承性)
			et:
				#nav>ul>li{

				}
	7. 伪类选择器
		1. 分类
			1. 超链接伪类选择器
			2. 动态伪类选择器
		2. 作用
			主要是针对元素的不同状态去设置样式
			1. 超链接的不同状态
				访问前				:link
				访问后				:visited
				激活（鼠标点按不松）	:active
				鼠标滑过				:hover
			2. 其他元素具备
				鼠标滑过
				鼠标点按
			3. 表单控件
				获取到焦点时的状态		:focus
				对文本框和密码框而言，当用户点击输入时，都视为获取焦点状态
		3. 使用
			伪类选择器需要与其他选择器结合使用，设置元素在不同状态下的样式
			et:
				<!-- 设置超文本访问前状态 -->
				a:link{
					color :black;
					text-decoration :none; 
				}
		4. 注意：
			如果要给超链接添加四种状态下的样式，必须按照以下顺序书写伪类选择器
			:link-->:visited-->:hover-->:active
			简称“爱恨原则 LoVe HAte” 
		示例：见 CSS/link.html
4. 选择器的优先级
	当多个选择器的样式同时应用到一个元素上时，要按照不同选择器的优先级来应用样式
	判断选择器的优先级，主要看选择器的权重（权值），数值越大优先级越高

		选择器				权值
		1. 标签选择器			1
		2. 类选择器/伪类		10
		3. id选择器			100
		4. 行内样式			1000
	如果是复杂的选择器（后代，子代），选择器最终的权值是各选择器权值之和