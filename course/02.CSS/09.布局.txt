布局方式
	1.设置元素在网页中的排列方式和位置
	2. 分类
		1. 普通流布局/标准流布局/文档流布局
			默认布局方式
			特点：
				将元素按照书写顺序和元素类型，从左向右，从上至下排列
		2. 浮动布局
			属性：float
			取值：left/right/none（默认值）
				left:表示元素向左浮动，停靠在其他元素的边缘
				right:表示元素向右浮动，停靠在其他元素的边缘
			1. 特点：
				1. 元素设置浮动之后，会脱离文档流，脱流之后，元素在文档中不占位，呈现一种浮动元素“漂浮”在文档流上方的效果
				2. 浮动元素后面的正常元素会上移，占据原本浮动元素所在的位置
				3. 多个元素同时左浮或者右浮，浮动元素会依次停靠在前一个元素的边缘位置，第一个浮动元素会贴着父元素的边框显示
				4. 如果父元素中无法并排显示浮动元素，浮动元素会自动换行显示
				5. 浮动元素在文档中不占位
				6. 所有类型的元素，只要设置浮动，就可以设置宽高，行内块元素浮动之后，水平方向上就没有空隙了
			2. 浮动元素的特殊效果
				文字环绕效果
				浮动元素虽然会遮挡后面正常的元素，但是不会遮挡正常元素中内容的显示，内容会自动围绕在浮动元素周围显示
			3. 浮动元素对父元素高度的影响
				由于浮动元素在文档中不占位，一旦子元素全部浮动，父元素的高度就变成0了，影响父元素背景颜色，背景图片显示，影响后面元素的布局
				示例见 case/08-float.html
				解决方式：
					1. 指定父元素的高度
						弊端：无法确认父元素的高度，不一定每次都清楚知道
					2. 父元素中设置overflow:hidden
						弊端：如果父元素要显示溢出的内容，设置overflow:hidden之后，溢出内容就不显示了
					3. 清除浮动带来的影响
						1. 在父元素的末尾添加空的块级元素
						2. 设置空标签 clear:both
			4. 清除浮动
				由于浮动元素会对其后正常元素和其父元素带来一定影响，所以在网页布局中要清除这种影响
				属性：clear
				取值：
					1. none 默认值，不做处理
					2. left 表示清除当前元素前面左浮元素带来的影响，当前正常元素左边不允许出现浮动元素
					3. right 正常元素右边不允许出现浮动元素
					4. both 正常元素两边都不能出现浮动元素
		3. 定位布局
			1. 属性：position
			2. 取值
				1. static 默认值 按照文档流布局
				2. relative 相对定位
				3. absolute	绝对定位
				4. fixed	固定定位
				注意：只有元素的position属性设置为relative/absolute/fixed,才认为元素是“已经定位的元素”
			3. 偏移属性
				属性：top/right/bottom/left
				作用：配合已定位的元素实现位置移动
				取值：像素值
					top:	以元素的上边界为基准移动元素
					right:	以元素的右边界为基准移动元素
					bottom:	以元素的下边界为基准移动元素
					left:	以元素的左边界为基准移动元素
			4. 定位方式
				1. 相对定位
					position:relative;
					元素采用相对定位时，会参照它在文档中原本的位置进行偏移
				2. 绝对定位（重点）
					position:absolute;
					特点：
						1. 绝对定位的元素，会脱离文档流，元素在文档中不占位
						2. 绝对定位的元素会参照一个离他最近的并且已经定位的祖先元素进行偏移
						3. 如果元素没有定位的祖先元素，元素会参照body(浏览器窗口左上角)的位置进行偏移
					注意：
						1. 元素一旦绝对定位，就可以设置宽高了
						2. 经常使用“父相子绝”的方式实现页面布局
							父元素采用相对定位，子元素采用绝对定位
						3. 浮动和绝对定位都可以实现元素的脱流，采用 浮动+外边距 调整元素位置等价于使用 绝对定位+偏移属性，浮动更常见于外围结构标签，做网页整体布局时使用，绝对定位更常用于内部元素的调整
						4. 浮动和相对定位可以共存的，设置的相对定位只是为了辅助内部子元素的定位布局
				3. 固定定位
					1. 固定定位可以使元素固定在浏览器窗口的某个位置，不会随网页内容滚动而滚动
					2. 语法
						属性：position
						取值：fixed
						配合偏移属性实现元素位置的固定
					3. 注意：
						1. 固定定位的元素永远是参照浏览器窗口进行定位的
						2. 固定定位的元素都会变成块元素
				4. 堆叠次序调整
					1. 已定位的元素堆叠在一起时的排列顺序
					2. 语法
						属性：z-index
						取值：无单位的数值，默认为0，数值越大越靠上
					3. 注意
						1. 如果元素z-index属性值相同，后来者居上
						2. 父子元素都设置z-index，永远是子元素在上，不受z-index影响
						3. z-index属性只能用在已定位的元素上
							position:relative/absolute/fixed