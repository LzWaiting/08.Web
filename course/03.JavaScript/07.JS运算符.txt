JS 运算符

	1. 赋值运算符

		= 将右边的值赋值给左边变量

	2. 算术运算符

		+ - * / % 加 减 乘 除 取余

		++ -- 自增或自减运算符

			变量的自增和自减指的是在自身基础上进行+1或者-1操作

			注意：

				1. 自增与自减运算符在单独与变量结合时，放前放后没有区别

				2. 如果自增与自减运算符与其他运算符结合使用，要区分前缀和后缀.如果做前缀，那就先++/--，再进行赋值或其他运算;如果做后缀，那就先结合其他运算符，再进行++/--

			et1:

				var n = 5;
 
				n ++;	// 6

				++ n;	// 7

			et2:

				var num = 5;

				var res = num ++;

				console.log(num,res);	// 6 5

				注意：如果是 var res = num ++;

					1. 先找变量

					2. 从变量位置从左向右结合运算符，先赋值后++

			et3:

				var num = 5;

				var res = ++ num;

				console.log(num,res);	// 6 6

			思考：

				var n = 5;

				var r = n++ + ++n + n++ + ++n + n;   // 37

				注意：做前缀时，先操作变量，后取值

					做后缀时，先取值，后操作变量

	3. 关系运算符（比较运算符）

		> >= < <= == !=
	=== 恒等
		!== 不恒等

		注意：关系运算的结果为布尔类型

		1. 数字与数字比较

		2. 数字与字符串比较

			首先会自动将字符串转换为数字，再进行比较

			如果转换成功，按照数字之间的大小进行比较

			如果转换失败了，会变成数字与NaN的比较，结果永远都为False

			et:

				"10" > 5;	// true

				"10a" > 5;	// false

				"你好" > 5;	// false

		3. 字符串之间的比较

			按位进行每位字符的Unicode编码的比较，当前为相同，后移移至下一位进行比较

			et:

				"10" > "5";		// false

				"ab" > "ac";	// false

		4. == / === / != / !== 区别

			1. 相等：== 用于判断两个值是否相等，在比较时，会自动转换数据类型，只要值相等，结果就是true

				et：

					"10" == 10;		// true

			2. 恒等：=== 用于判断两个变量数据类型和值是否完全相同，不会进行数据类型转换，只有当操作数的数据类型保持一致，值相等，才为true

				et:

					"10" === 10; 	// false

			3. 不等 != 在两端值不相等的情况下，返回true

			4. 不恒等 !== 两个操作数中，数据类型与值只要有一个不相等，就返回true,否则返回false

	4. 逻辑运算符

		进行多项比较，并将结果组合为单一的布尔值

		1. &&: 逻辑与，左右为表达式，只有两个表达式的结果都为真，逻辑与的结果才为真

		2. ||: 逻辑或，只要有一个条件为真，结果就为真

		3. ！: 逻辑非，对现有条件的结果进行取反操作

	5. 位运算符

		程序中所有的数据在计算机中都是以二进制存储的，位运算，就是对二进制位进行操作

		1. 按位与： &
 
			将整数转换为二进制形式，每一位都进行与操作

			注意：任何数字与1进行位与操作，结果为1时，表明操作数是奇数，结果为零时，操作数为偶数，所有多用来判断数字的奇偶性

		2. 按位或：|

		3. 按位异或： ^
	如果两个数字的二进制位进行比较，相同则为0，不同则为1

			注意：可以在不借助第三方变量的情况下，交换两个变量的值

			et:

				var a = 3, b = 5;

				------交换a,b的值------

				1. 普通做法

					var c = a;

					a = b;

					b = c;

				2. ^ 操作

					a = a ^ b;	--> a = 6

					b = a ^ b;	--> b = 3

					a = a ^ b;	--> a = 5
  
	6. 三目运算符

		三目运算符，有三个操作数

		类似：

			单目运算符（一元运算符）++ -- ！typeof

			双目运算符（二元运算符）+ - * / % && ||
 
		语法：

			条件表达式 ? 表达式1 : 表达式2;

			先判断条件表达式的结果，为真，执行表达式1；为假，执行表达式2

			et:

				var a = 150;

				var res = a > 120 ? "偏胖" : "正常";