JS 函数
	1. 函数，就是一段待执行的代码块
	2. 作用：实现多条语句的封装，代码复用
	3. 函数使用
		1. 函数的声明
		2. 函数的调用
		注意：函数先声明后调用（JS中非强制）
	4. 语法：
		1. 函数声明
			function 函数名(参数列表){
				函数体;
				返回值;		
			}
			1. JS 中函数声明使用function关键字
			2. 函数名自定义，遵照变量名命名规范，见名知意
			3. 参数列表，参数表示函数体执行所需要的数据，可以为空，()不可以省略，多个参数之间使用","隔开
			4. 返回值，使用return关键字，将函数体内部执行的结果传递给外界使用，只能返回一个值，返回值不需要的话，可以省略return
			注意：return 一定要写在函数体的末尾，return 关键字后面的代码都不执行
			5. 匿名函数
				var fn = function(){
					函数体
				};
		2. 函数调用
			语法：
				函数名();
				函数名(a,b);
				var res = 函数名(a,b);
			注意：
				1. 函数参数分为形参和实参，函数声明时，使用形参，函数调用时传递实参
					形参： 代号
					实参： 具体的数据
				2. 函数如果有返回值，在调用时，需要定义变量接收返回值
	5. 变量的作用域
		1. 变量的作用域指的是变量起作用的范围
		2. 分类：
			1. 全局作用域
				处在全局作用域中的变量就是全局变量
				1. 在function 之外，通过var 声明的变量都是全局变量，在任何地方都可以访问
				2. 声明变量时，省略var关键字，(不管在哪里声明)一律是全局变量，推荐使用var关键字，不要省略
			2. 局部作用域（JS中局部作用域指的是函数作用域）
				局部作用域中的变量就是局部变量
				1. 在函数内部使用var 关键字声明的变量都是局部变量，只在当前函数作用域中可以访问，外界无法访问
				2. 局部变量出了函数就不能访问了
			注意：
				在函数中访问变量：
					1. 如果当前函数中没有该变量，就访问全局作用在域中的变量
					2. 如果当前函数中定义了该变量，全局中也有相同的变量名，函数就近访问变量